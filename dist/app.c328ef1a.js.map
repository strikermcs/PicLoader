{"version":3,"sources":["upload.js","app.js"],"names":["bytesToSize","bytes","sizes","i","parseInt","Math","floor","log","round","pow","element","tag","classes","content","node","document","createElement","length","classList","add","textContent","noop","upload","selector","options","files","input","querySelector","onUpload","preview","open","style","display","multi","setAttribute","accept","Array","isArray","join","insertAdjacentElement","triggerInput","click","changeHandler","event","target","from","innerHTML","forEach","file","type","match","reader","FileReader","onload","ev","src","result","insertAdjacentHTML","name","size","readAsDataURL","removeHandler","dataset","filter","block","closest","setTimeout","remove","clearPreview","el","bottom","uploadHandler","querySelectorAll","e","previewInfo","addEventListener","console"],"mappings":"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","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["function bytesToSize(bytes){\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB']\r\n    if(!bytes){\r\n        return '0 Byte'\r\n    }\r\n    const i = parseInt(Math.floor(Math.log(bytes)/Math.log(1024)))\r\n    return Math.round(bytes/Math.pow(1024,i))+\" \"+sizes[i]  \r\n}\r\n\r\nconst element = (tag, classes = [], content) => {\r\n    const node = document.createElement(tag)\r\n\r\n    if(classes.length){\r\n        node.classList.add(...classes)\r\n    }\r\n\r\n    if(content){\r\n        node.textContent = content\r\n    }\r\n\r\n    return node\r\n} \r\n\r\n\r\nfunction noop() {}\r\n\r\nexport function upload(selector, options = {}){\r\n    let files = []\r\n    const input = document.querySelector(selector)\r\n    const onUpload = options.onUpload ?? noop    \r\n    const preview = element('div', ['preview'])\r\n    const open = element('button', ['btn'], 'Открыть')\r\n    const upload = element('button', ['btn', 'primary'], 'Загрузить')\r\n    \r\n    upload.style.display = 'none'\r\n\r\n    if(options.multi){\r\n        input.setAttribute('multiple', true)\r\n    }\r\n\r\n    if(options.accept && Array.isArray(options.accept)){\r\n        input.setAttribute('accept', options.accept.join(','))\r\n    }\r\n\r\n    input.insertAdjacentElement('afterend', preview)\r\n    input.insertAdjacentElement('afterend', upload)\r\n    input.insertAdjacentElement('afterend', open)\r\n\r\n    const triggerInput = () => input.click()\r\n    \r\n    const changeHandler = event =>{\r\n        if(!event.target.files.length){\r\n            return\r\n        }\r\n\r\n        files = Array.from(event.target.files)\r\n\r\n        preview.innerHTML = ''\r\n        upload.style.display = 'inline'\r\n        files.forEach(file => {\r\n            if(!file.type.match('image')){\r\n                return\r\n            }\r\n\r\n            const reader = new FileReader()\r\n\r\n            reader.onload = ev => {\r\n                const src = ev.target.result\r\n                preview.insertAdjacentHTML('afterbegin', `\r\n                \r\n                <div class = \"preview-image\">\r\n                <div class = \"preview-remove\" data-name=\"${file.name}\">&times;</div>\r\n                <img src=\"${src}\" alt=\"${file.name}\" />\r\n                <div class=\"preview-info\">\r\n                    <span>${file.name}</span>\r\n                    ${bytesToSize(file.size)}\r\n                </div>\r\n                </div>\r\n                `)\r\n            }\r\n\r\n            reader.readAsDataURL(file)\r\n        } )\r\n\r\n\r\n    }\r\n\r\n    const removeHandler = event =>{\r\n        if (!event.target.dataset.name){\r\n            return\r\n        }\r\n\r\n        const {name} = event.target.dataset\r\n        files = files.filter(file => file.name !== name)\r\n\r\n        if(!files.length){\r\n            upload.style.display = 'none'\r\n        }\r\n\r\n        const block = preview\r\n        .querySelector(`[data-name=\"${name}\"]`)\r\n        .closest('.preview-image')\r\n\r\n        block.classList.add('removing')\r\n        setTimeout( () => block.remove(), 300)\r\n        \r\n    } \r\n\r\n    const clearPreview = el => {\r\n        el.style.bottom = '4px'\r\n        el.innerHTML = '<div class=\"preview-info-progress\"></div>'\r\n       \r\n    }\r\n\r\n\r\n    const uploadHandler = () => {\r\n        preview.querySelectorAll('.preview-remove').forEach(e => e.remove())\r\n        const previewInfo = preview.querySelectorAll('.preview-info')\r\n        previewInfo.forEach(clearPreview)\r\n        onUpload(files)\r\n    } \r\n\r\n    \r\n    open.addEventListener('click', triggerInput)\r\n    input.addEventListener('change', changeHandler)\r\n    preview.addEventListener('click', removeHandler)\r\n    upload.addEventListener('click', uploadHandler)\r\n\r\n}","import {upload} from './upload.js'\r\n\r\nupload('#file',{\r\n    multi: true,\r\n    accept: ['.png', '.jpg', '.jpeg', '.gif'],\r\n    onUpload(files){\r\n        console.log('Files:', files)\r\n    }\r\n})"]}